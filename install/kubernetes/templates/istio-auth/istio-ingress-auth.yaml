################################
# Empty secret for Istio ingress controller
################################
apiVersion: v1
kind: Secret
metadata:
  name: istio-ingress-certs
data:
  tls.key:
  tls.crt:
---
################################
# Istio ingress controller with Istio auth
################################
apiVersion: v1
kind: Service
metadata:
  name: istio-ingress
  labels:
    istio: ingress
spec:
  type: LoadBalancer
  ports:
  - port: 80
#   nodePort: 32000
    name: http
  - port: 443
    name: https
  selector:
    istio: ingress
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-ingress-service-account
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: istio-ingress
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        alpha.istio.io/sidecar: ignore
      labels:
        istio: ingress
    spec:
      serviceAccountName: istio-ingress-service-account
      containers:
      - name: istio-ingress
        image: {PROXY_HUB}/proxy_debug:{PROXY_TAG}
        args: ["proxy", "ingress", "-v", "2"]
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - mountPath: /etc/certs
          name: istio-certs
          readOnly: true
        - mountPath: /etc/istio/ingress-certs
          name: ingress-certs
          readOnly: true
        - name: config-volume
          mountPath: /etc/istio/config
      volumes:
      - name: istio-certs
        secret:
          secretName: istio.default
      - name: ingress-certs
        secret:
          secretName: istio-ingress-certs
      - name: config-volume
        configMap:
          name: istio
---

